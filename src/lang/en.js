export default {
    newWallet: 'New Wallet',
    walletInfo: 'Neatio',
    mapping: 'Token Mapping',
    transfer: 'Transfer',
    contract: 'Contract',
    pleaseSelectContract: 'Please select contract',
    pleaseUnlockAccount: 'Please unlock your account',
    staking: 'Staking',
    register: 'Register',
    unRegister: 'UnRegister',
    editValidator: 'Edit Validator',
    setCommission: 'Set Commission',
    withdrawReward: 'Withdraw Reward',
    errPublicKey: 'Validator Public Key is wrong or missing!',
    errCommission: 'The commission can only be 0 to 100',
    wrongNetwork: 'Wrong Network',
    unBanned: 'UnBanned',
    vote: 'Vote',
    stake: 'Stake',
    mineReward: 'Mining Rewards',
    connect: 'Connect Wallet',
    token: "Token",
    accessWallet: 'How to access your wallet?',
    privatekey: 'Private key',
    selectKeyStoreFile: 'Please select your wallet Keystore file',
    selectKeyStore: 'Please select your wallet Keystore',
    etKeyStore: 'Please enter your wallet Keystore',
    etWalletPwd: 'Please enter your wallet password',
    unlock: 'Unlock',
    etPrivakey: 'Please enter your wallet private key',
    neatBalance: 'NEAT Balance',
    contractNotEnough: 'Contract balance not enough',
    votes: 'Votes',
    myVote: 'Votes',
    walletAddress: 'Wallet Address',
    privatekey: 'Private key',
    scp: 'Scan the QR code to pay me',
    dnk: 'Download new Keystore',
    etnpwd: 'Please select a new wallet Keystore',
    etnpwd2: 'Please select a new wallet Keystore',
    yAddr: 'Wallet Address',
    balance: 'Balance',
    toAddr: 'Collection Address',
    receiveAddress: 'Receive Address',
    amount: 'Amount',
    delegateAddress: 'Delegate Address',
    chooseToken: 'Choose Token',
    gt: 'Generate Transaction',
    wr: 'Withdraw Reward',
    errPrivatekey: 'Validator Private Key is wrong or missing!',
    errAddr: 'The collection address is incorrect',
    errAmount: 'Amount is wrong or missing!',
    errLimit: 'Gas Limit is wrong or missing',
    errLimitLess: 'Gas Limit cannot be lower than 21000 !',
    errPrice: 'Gas Price is incorrect',
    errPriceBig: 'Gas Price cannot be higher than 0.00005 !',
    errPwd: 'Password is incorrect',
    createWallet: 'Create Wallet',
    walletName: 'Wallet Name',
    etWalletName: 'Please enter wallet name',
    walletPwd: 'Wallet Password',
    pwdMinLen: 'Your password must contain at least 9 characters',
    pwdNoSpace: 'Your password must not contain spaces at the beginning or the end',
    etWalletPwd: 'Please enter your wallet password',
    repeatWalletPwd: 'Please repeat your wallet password',
    etRepeatWalletPwd: 'Please repeat your wallet password again',
    diffPwd: 'The password you entered twice is different',
    warn1: 'Please ensure the password strength',
    warn2: 'Your password must not contain spaces at the beginning or the end',
    warn3: 'The downloaded file contains your wallet information and do not share it with others or your asset will be stolen',
    skf: 'Save your Keystore file',
    down: 'Download',
    remind1: `Don't lose it! If lost, it cannot be recovered`,
    remind2: `Don't share it! If you use this file on a phishing website, your asset will be stolen`,
    remind3: 'Please backup your Keystore',
    continue: 'Continue',
    spk: 'Save private key',
    gtc: 'Receive test-token',
    errAddr: 'The address you entered is incorrect',
    cancelVote: 'Withdraw Vote',
    name: 'Name',
    address: 'Address',
    totalVotes: 'Total Votes',
    commission: 'Commission',
    myVotes: 'My Votes',
    notEffective: 'Ineffective',
    effective: 'effective',
    withdrawn: 'Withdrawn',
    reward: 'Reward',
    operation: 'Operation',
    withdrawVote: 'Withdraw Vote',
    unstake: 'Unstake',
    withdrawRewards: 'Withdraw Reward',
    etAmount: 'Please enter the amount',
    stakeAmount: 'Please enter the amount to stake',
    unStakeAmount: 'Please enter the amount to unstake',
    withdrawAmount: 'Please enter the amount to withdraw',
    confirm: 'Confirm',
    cancel: 'Cancel',
    mNum: 'The voting amount must be number',
    gt0: 'The voting amount must be greater than 0',
    notEnough: 'Insufficient Balance',
    cmNum: 'The withdrawal amount must be a number',
    cgt: 'The withdrawal amount must be greater than 0',
    surplusVotes: 'The number of remaining votes must be greater than or equal to 1000 or equal to zero',
    doReceiveRewards: 'Receive this reward?',
    rewardNumber: 'The reward amount must be number',
    rewardGt: 'The reward amount must be greater than 0',
    rewardNotEnough: 'The reward amount is not enough',
    tips: 'Reminder!',
    tips1: 'Cross-chain fee is 0.00 %',
    tips2: 'The Minimum cross-chain amount is ',
    tips3: 'The estimated time for users who cross-chain between 2:00 am and 10:00 am (UTC) is 10-30 min',
    tips4: 'The estimated time for users who cross-chain between 10:00 am  - 2:00 am the next day（UTC）is 16 hours',
    tips5: ' or more, the estimated time is 16 hours',
    tips6: 'Cross-chain transaction search page',

    weightReward: 'Weight Reward',
    luckyReward: 'Lucky Reward',
    partReward: 'Participation Reward',
    receiveAddr: 'Receive Address(Neatio 3.0 Address)',
    totalReward: 'Total Reward',

    blocksList: {
        blocksListTitle: 'Blocks',
        viewMore: 'View More > ',
        height: 'Height: ',
        miner: 'Miner: ',
        reward: 'Block Reward: ',
        txns: 'Txns: ',
        avgGasPrice: 'Avg.Fee: ',
        timestamp: 'Timestamp: ',
        hash: 'Hash: ',
        parent: 'Parent Hash: ',
        total: 'Total: ',
        blocklist: 'Blocklist',
        blockdetail: 'Block Info',
        blocklist2: 'Blocks',
        totalfee: 'Total Fee',
        txns2: 'Txns',
        miner2: 'Miner',
        reward2: 'Reward',
        avgGasPrice2: 'Avg.Fee',
        accountReward: 'Reward/24h'
    },
    nav: {
        home: 'Home',
        guide: 'User Guide',
        community: 'Community',
        placeholder: 'WALLET ADDRESS / BLOCK NUMBER / TRANSACTION HASH',
        blockchain: {
            name: 'Blockchain',
            block: 'Blocks',
            transaction: 'Transactions',
            token: 'Tokens',
            account: 'Accounts',
            referendum: 'Referendum'
        },
        bp: 'Thearchy Node',
        enVersion: 'EN Version',
        reqeustAccountsError: 'Request Accounts Error',
        connect: 'Connect Wallet'
    },
    transactionList: {
        transactionListTitle: 'Transactions',
        txHash: 'TxHash: ',
        from: 'From: ',
        to: 'To: ',
        txReceiptStatus: 'TxReceiptStatus: ',
        value: 'Value: ',
        txtype: 'TxType: ',
        txtype2: 'TxType',
        txfee: 'TxFee',
        txfee2: 'TxFee: ',
        txhash2: 'TxHash',
        from2: 'From',
        to2: 'To',
        for2: 'for',
        timestamp: 'Timestamp',
        value2: 'Value',
        height: 'Height',
        latest: 'Latest',
        txns: 'txns',
        status: 'Status',
        transactions: 'Transactions',
        transfer: 'Tokens Transferred: ',
        holders: 'holders',
        gasLimit: 'Gas Limit: ',
        gasUsed: 'Gas Used By Transaction: ',
        gasPrice: 'Gas Price: ',
        actualTxCost: 'Actual Tx Cost/Fee: ',
        nounce: 'Nonce: '
    },
    neatio: {
        change: '24 Change: ',
        volume: '24 Volume: ',
        cap: 'Market Cap: '
    },
    account: {
        rank: 'Rank',
        address: 'Address',
        balance: 'Balance',
        createTime: 'Create Time(+08:00)',
        CTime: 'Create Time:',
        percentage: 'Percentage',
        accountlist: 'Accountlist',
        accountdetail: 'Accountdetail',
        total: 'Total Txns: ',
        qrcode: 'Address QR Code: ',
        address2: 'Address: ',
        balance2: 'Balance: ',
        token: 'Token Txns',
        accounts: 'Accounts',
        inquire: 'Inquire about other token',
        otherToken: 'Other Token',
        weight: 'Weight',
        votes: 'Votes',
        voted: 'Voted'
    },
    err: {
        hint: 'There is no content~~~',
        invalidHash: 'Sorry, We Are Unable To Locate This transaction Hash. Waiting and reloading this page may be useful'
    },
    detail: {
        District: 'District fund chain',
        Trade_list: 'Transactions',
        Activity_list: 'Tx Info',
        block_height: 'Height',
        Transaction_type: 'TxType',
        returnCode: 'ReturnCode',
        Vote_redemption: 'Vote redemption',
        Trading_state: 'TxReceipt Status',
        success: 'Success',
        fail: 'Fail',
        pending: 'Pending',
        time_stamp: 'Timestamp',
        Seconds_before: 'Seconds before',
        Time_standard: 'Time standard',
        Redemption_account: 'Unmortgage Account',
        ticket_number: 'Redemption ticket number',
        ticket: 'ticket',
        tickets: ' Number of votes ',
        Service_Charge: 'Service Charge',
        log: 'log',
        Mortgage_account: ' Mortgage Account: ',
        Voting_account: ' Vote Account ',
        Node_name: 'Node',
        More: 'more nodes',
        less: 'Collapse',
        Initiator: 'Initiator',
        recipient: 'recipient',
        Money: 'money',
        vote: 'vote',
        Voting_mortgage: 'Voting mortgage',
        Transfer_accounts: 'Transfer accounts',
        Contact_us: 'Contact Us',
        link: 'link',
        wechat: "WeChat",
        micro_blog: 'Weibo',
        Subscription: 'Subscription',
        Community: ' Community ',
        wallet: 'Wallet',
        input: 'Input',
        log2: 'Log'
    },
    token: {
        tokens: 'Tokens',
        token: 'Token',
        price: 'Price',
        marketcap: 'Market Cap',
        change: 'Change(%)',
        totalsupply: 'Total Supply: ',
        totalsupply2: 'Total Supply',
        holders: 'Holders: ',
        price2: 'Price: ',
        contract: 'Contract: ',
        holders2: 'Holders',
        inquire: 'Token Inquiries',
        searchToken: 'Search by Token',
        name: 'Token Name',
        name2: 'Token Name: ',
        id: 'Token ID',
        percentage: 'Percentage'
    },
    node: {
        search: 'Search by Candidates or Team',
        team: 'Team',
        region: 'Country/City',
        nodes: 'Nodes',
        placeholder: 'Search by candidate',
        name: 'Candidates',


    },
    referendum: {
        referendum: "Referendum",
        proposal: "Proposal",
        opinion: "Opinion collection",
        agree: "Agree",
        disagree: "Disagree",
        voters: "Voters",
        endTime: "End time",
        search: "Search by Title",
        viewAll: "View All"
    }
}
